    /**
     * Save order.
     *
{% if 'annotation' == format %}
     * @Route("/order/{field}/{type}", name="{{ route_name_prefix }}_sort")
{% endif %}
{% if needSecurity %}
     * @Security("has_role('ROLE_{{ entity|upper }}_INDEX')")
{% endif %}
     */
    public function sortAction($field, $type)
    {
        $this->setOrder('{{ entity|lower }}', $field, $type);

        return $this->redirect($this->generateUrl('{{ route_name_prefix }}'));
    }

    /**
     * @param string $name  session name
     * @param string $field field name
     * @param string $type  sort type ("ASC"/"DESC")
     */
    protected function setOrder($name, $field, $type = 'ASC')
    {
        $this->get('session')->set('sort.' . $name, ['field' => $field, 'type' => $type]);
    }

    /**
     * @param  string $name
     * @return array
     */
    protected function getOrder($name)
    {
        $session = $this->get('session');

        return $session->has('sort.' . $name) ? $session->get('sort.' . $name) : null;
    }

    /**
     * @param QueryBuilder $qb
     * @param string       $name
     */
    protected function addQueryBuilderSort(QueryBuilder $qb, $name)
    {
        $alias = current($qb->getDQLPart('from'))->getAlias();
        if (is_array($order = $this->getOrder($name))) {
            $qb->orderBy($alias . '.' . $order['field'], $order['type']);
        }
    }
